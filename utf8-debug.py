# -*- coding: utf-8 -*-
#!/usr/bin/env python2.7
#
#contributor for script
#https://github.com/ttttian/python-latin1-to-utf8/blob/master/latin1_to_utf8.py
#
import re
import sys
import os

regexDict = {
'â‚¬':'€','â€š':'‚','â€ž':'„','â€¦':'…','â€¡':'‡',
'â€°':'‰','â€¹':'‹','â€˜':'‘','â€™':'’','â€œ':'“',
'â€¢':'•','â€“':'–','â€”':'—','â„¢':'™','â€º':'›',
'Æ’':'ƒ','Ë†':'ˆ','Å’':'Œ','Å½':'Ž','Ëœ':'˜','Å¡':'š',
'Å“':'œ','Å¾':'ž','Å¸':'Ÿ','Â¡':'¡','Â¢':'¢','Â£':'£',
'Â¤':'¤','Â¥':'¥','Â¦':'¦','Â§':'§','Â¨':'¨','Â©':'©',
'Âª':'ª','Â«':'«','Â¬':'¬','Â­' :'­','Â®':'®','Â¯':'¯',
'Â°':'°','Â±':'±','Â²':'²','Â³':'³','Â´':'´','Âµ':'µ',
'Â¶':'¶','Â·':'·','Â¸':'¸','Â¹':'¹','Âº':'º','Â»':'»',
'Â¼':'¼','Â½':'½','Â¾':'¾','Â¿':'¿','Ã€':'À','Ã‚':'Â',
'Ãƒ':'Ã','Ã„':'Ä','Ã…':'Å','Ã†':'Æ','Ã‡':'Ç','Ãˆ':'È',
'Ã‰':'É','ÃŠ':'Ê','Ã‹':'Ë','ÃŒ':'Ì','ÃŽ':'Î','Ã‘':'Ñ',
'Ã’':'Ò','Ã“':'Ó','Ã”':'Ô','Ã•':'Õ','Ã–':'Ö','Ã—':'×',
'Ã˜':'Ø','Ã™':'Ù','Ãš':'Ú','Ã›':'Û','Ãœ':'Ü','Ãž':'Þ',
'ÃŸ':'ß','Ã¡':'á','Ã¢':'â','Ã£':'ã','Ã¤':'ä','Ã¥':'å',
'Ã¦':'æ','Ã§':'ç','Ã¨':'è','Ã©':'é','Ãª':'ê','Ã«':'ë',
'Ã¬':'ì','Ã­' :'í','Ã®':'î','Ã¯':'ï','Ã°':'ð','Ã±':'ñ',
'Ã²':'ò','Ã³':'ó','Ã´':'ô','Ãµ':'õ','Ã¶':'ö','Ã·':'÷',
'Ã¸':'ø','Ã¹':'ù','Ãº':'ú','Ã»':'û','Ã¼':'ü','Ã½':'ý',
'Ã¾':'þ','Ã¿':'ÿ','Å' :'Š','Â' :'',
}

regex = r'â‚¬|â€š|â€ž|â€¦|â€¡|â€°|â€¹|â€˜|â€™|â€œ|â€¢|â€“|â€”|â„¢|â€º|Æ’|Ë†|Å’|Å½|Ëœ|\
Å¡|Å“|Å¾|Å¸|Â¡|Â¢|Â£|Â¤|Â¥|Â¦|Â§|Â¨|Â©|Âª|Â«|Â¬|Â­|Â®|Â¯|Â°|Â±|Â²|Â³|Â´|Âµ|Â¶|Â·|Â¸|Â¹|\
Âº|Â»|Â¼|Â½|Â¾|Â¿|Ã€|Ã‚|Ãƒ|Ã„|Ã…|Ã†|Ã‡|Ãˆ|Ã‰|ÃŠ|Ã‹|ÃŒ|ÃŽ|Ã‘|Ã’|Ã“|Ã”|Ã•|Ã–|Ã—|Ã˜|Ã™|Ãš|\
Ã›|Ãœ|Ãž|ÃŸ|Ã¡|Ã¢|Ã£|Ã¤|Ã¥|Ã¦|Ã§|Ã¨|Ã©|Ãª|Ã«|Ã¬|Ã­|Ã®|Ã¯|Ã°|Ã±|Ã²|Ã³|Ã´|Ãµ|Ã¶|Ã·|Ã¸|Ã¹|Ãº|Ã»|Ã¼|Ã½|Ã¾|Ã¿|Å|Â'

def regexReplace(stringValue):
    newLine = stringValue
    match = re.findall(regex, newLine)
    if not match:
        return newLine
    for characterInvalid in match:
        newLine = re.sub(characterInvalid, regexDict[characterInvalid], newLine)
    return newLine

if len(sys.argv) < 1:
    print("Informe o arquivo que será tratado como paramêtro!")
    exit(1)
else:
    filePath = sys.argv[1]
    newFile = "new_" + str(filePath.split("/")[-1])
    if os.path.exists(filePath):
        #open file
        file = open(sys.argv[1], "r")
        newFile = open(newFile, "w")
        for line in file.readlines():
            newFile.write(regexReplace(line))
        file.close()
        newFile.close()
        print("Foi gerado o arquivo %s!" %newFile)
    else:
        print("Arquivo não existe!")
        exit(2)
